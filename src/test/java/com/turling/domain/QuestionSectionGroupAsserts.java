package com.turling.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuestionSectionGroupAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionSectionGroupAllPropertiesEquals(QuestionSectionGroup expected, QuestionSectionGroup actual) {
        assertQuestionSectionGroupAutoGeneratedPropertiesEquals(expected, actual);
        assertQuestionSectionGroupAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionSectionGroupAllUpdatablePropertiesEquals(QuestionSectionGroup expected, QuestionSectionGroup actual) {
        assertQuestionSectionGroupUpdatableFieldsEquals(expected, actual);
        assertQuestionSectionGroupUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionSectionGroupAutoGeneratedPropertiesEquals(QuestionSectionGroup expected, QuestionSectionGroup actual) {
        assertThat(actual)
            .as("Verify QuestionSectionGroup auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionSectionGroupUpdatableFieldsEquals(QuestionSectionGroup expected, QuestionSectionGroup actual) {
        assertThat(actual)
            .as("Verify QuestionSectionGroup relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getBaseGroupIds()).as("check baseGroupIds").isEqualTo(expected.getBaseGroupIds()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionSectionGroupUpdatableRelationshipsEquals(QuestionSectionGroup expected, QuestionSectionGroup actual) {
        assertThat(actual)
            .as("Verify QuestionSectionGroup relationships")
            .satisfies(a -> assertThat(a.getGrade()).as("check grade").isEqualTo(expected.getGrade()));
    }
}
