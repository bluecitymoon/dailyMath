package com.turling.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DistinctAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistinctAllPropertiesEquals(Distinct expected, Distinct actual) {
        assertDistinctAutoGeneratedPropertiesEquals(expected, actual);
        assertDistinctAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistinctAllUpdatablePropertiesEquals(Distinct expected, Distinct actual) {
        assertDistinctUpdatableFieldsEquals(expected, actual);
        assertDistinctUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistinctAutoGeneratedPropertiesEquals(Distinct expected, Distinct actual) {
        assertThat(actual)
            .as("Verify Distinct auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistinctUpdatableFieldsEquals(Distinct expected, Distinct actual) {
        assertThat(actual)
            .as("Verify Distinct relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getPinyin()).as("check pinyin").isEqualTo(expected.getPinyin()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistinctUpdatableRelationshipsEquals(Distinct expected, Distinct actual) {
        // empty method
    }
}
