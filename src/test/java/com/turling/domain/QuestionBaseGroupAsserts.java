package com.turling.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuestionBaseGroupAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionBaseGroupAllPropertiesEquals(QuestionBaseGroup expected, QuestionBaseGroup actual) {
        assertQuestionBaseGroupAutoGeneratedPropertiesEquals(expected, actual);
        assertQuestionBaseGroupAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionBaseGroupAllUpdatablePropertiesEquals(QuestionBaseGroup expected, QuestionBaseGroup actual) {
        assertQuestionBaseGroupUpdatableFieldsEquals(expected, actual);
        assertQuestionBaseGroupUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionBaseGroupAutoGeneratedPropertiesEquals(QuestionBaseGroup expected, QuestionBaseGroup actual) {
        assertThat(actual)
            .as("Verify QuestionBaseGroup auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionBaseGroupUpdatableFieldsEquals(QuestionBaseGroup expected, QuestionBaseGroup actual) {
        assertThat(actual)
            .as("Verify QuestionBaseGroup relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getQuestionIds()).as("check questionIds").isEqualTo(expected.getQuestionIds()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionBaseGroupUpdatableRelationshipsEquals(QuestionBaseGroup expected, QuestionBaseGroup actual) {
        // empty method
    }
}
