package com.turling.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StudentGradeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentGradeAllPropertiesEquals(StudentGrade expected, StudentGrade actual) {
        assertStudentGradeAutoGeneratedPropertiesEquals(expected, actual);
        assertStudentGradeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentGradeAllUpdatablePropertiesEquals(StudentGrade expected, StudentGrade actual) {
        assertStudentGradeUpdatableFieldsEquals(expected, actual);
        assertStudentGradeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentGradeAutoGeneratedPropertiesEquals(StudentGrade expected, StudentGrade actual) {
        assertThat(actual)
            .as("Verify StudentGrade auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentGradeUpdatableFieldsEquals(StudentGrade expected, StudentGrade actual) {
        assertThat(actual)
            .as("Verify StudentGrade relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getIndex()).as("check index").isEqualTo(expected.getIndex()))
            .satisfies(a -> assertThat(a.getTerm()).as("check term").isEqualTo(expected.getTerm()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentGradeUpdatableRelationshipsEquals(StudentGrade expected, StudentGrade actual) {
        // empty method
    }
}
